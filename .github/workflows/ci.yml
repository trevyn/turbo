name: ci

on:
  push:
  pull_request:
  schedule: [cron: '40 1 * * *']

env:
  CARGO_TERM_COLOR: always

jobs:
  assign:
    name: Assign build_id
    runs-on: ubuntu-latest
    
    steps:
      - run: echo $(date '+%y%m%d-%H%M')-${GITHUB_SHA:0:7} > build_id

      - uses: actions/upload-artifact@v2
        with:
          name: build_id
          path: build_id

  checklinks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: trevyn/lychee-action@v1
        id: lychee
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ./**/*.* --verbose --no-progress --exclude-all-private --base="http://127.0.0.1" --headers="accept=text/html" --scheme=http --scheme=https --exclude njal.la

      - name: Fail if there were link-check errors
        run: exit ${{ steps.lychee.outputs.exit_code }}

  build:
    needs: [assign]
    name: build ${{ matrix.os }} rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-11.0]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build_id

      - run: cat build_id

      - run: echo "BUILD_ID=$(cat build_id)" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          components: clippy
          targets: wasm32-unknown-unknown

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - run: npm run build
      - run: cargo tree
      - run: cargo tree --target=wasm32-unknown-unknown
      - run: npx audit-ci --low -a 1006899
      # - run: npm run test-ci

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: target/release/${{ github.event.repository.name }}

  release:
    needs: [assign, checklinks, build]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/download-artifact@v2

      - run: cat build_id/build_id

      - run: echo "BUILD_ID=$(cat build_id/build_id)" >> $GITHUB_ENV

      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_ID }}
          release_name: ${{ env.BUILD_ID }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-latest-stable/${{ github.event.repository.name }}
          asset_name: ${{ github.event.repository.name }}-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-11.0-stable/${{ github.event.repository.name }}
          asset_name: ${{ github.event.repository.name }}-x86_64-apple-darwin
          asset_content_type: application/octet-stream