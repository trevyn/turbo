name: ci

on:
  push:
  pull_request:
  schedule: [cron: '40 1 * * *']

env:
  CARGO_TERM_COLOR: always

jobs:
  assign:
    name: assign build_id
    runs-on: ubuntu-latest
    
    steps:
      - run: wget https://github.com/trevyn/animal-time/releases/latest/download/animal-time
      - run: chmod +x animal-time
      - run: ./animal-time > build_id
      - run: cat build_id

      - uses: actions/upload-artifact@v2
        with:
          name: build_id
          path: build_id

  checklinks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: trevyn/lychee-action@v1
        id: lychee
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ./**/*.* --verbose --no-progress --exclude-all-private --base="http://127.0.0.1" --headers="accept=text/html" --scheme=http --scheme=https

      - name: Fail if there were link-check errors
        run: exit ${{ steps.lychee.outputs.exit_code }}

  test:
    name: test rust ${{ matrix.rust }} ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v1
        with:
          key: test-2

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - run: npm install
      - run: CARGO_LOG=cargo::core::compiler::fingerprint=info cargo build --lib --release --target wasm32-unknown-unknown
      - run: wasm-pack --log-level warn build --target web --out-dir src-frontend/turbocharger_generated --out-name index
      - run: npx snowpack build
      - run: CARGO_LOG=cargo::core::compiler::fingerprint=info cargo build --release
      - run: |
          target/release/turbo &
          sleep 2
          CARGO_LOG=cargo::core::compiler::fingerprint=info npx web-test-runner "src-frontend/**/*.test.{svelte,js,ts}"

  build:
    needs: [assign]
    name: build rust ${{ matrix.rust }} ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build_id

      - run: cat build_id

      - run: echo "BUILD_ID=$(cat build_id)" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v1
        with:
          key: build-2

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - run: npm install
      - run: CARGO_LOG=cargo::core::compiler::fingerprint=info cargo build --lib --release --target wasm32-unknown-unknown
      - run: npx snowpack build
      - run: npx svelte-check
      - run: CARGO_LOG=cargo::core::compiler::fingerprint=info cargo build --release
      - run: cargo tree
      - run: cargo tree --target=wasm32-unknown-unknown
      - run: npm list --depth=99
      - run: npx audit-ci --low

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: |
            target/release/*
            !target/release/.fingerprint/*
            !target/release/build/*
            !target/release/deps/*
            !target/release/examples/*
            !target/release/incremental/*
            !target/release/*.d
            !target/release/*.rlib
            !target/release/*.dylib
            !target/release/*.so

  release:
    needs: [assign, checklinks, build, test]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/download-artifact@v2

      - run: cat build_id/build_id

      - run: echo "BUILD_ID=$(cat build_id/build_id)" >> $GITHUB_ENV

      # - run: mv macos-latest-stable/$(basename macos-latest-stable/*) $(basename macos-latest-stable/*)-mac

      - run: mv ubuntu-latest-stable/$(basename ubuntu-latest-stable/*) $(basename ubuntu-latest-stable/*)-linux

      - id: create_release
        uses: trevyn/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_ID }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            **/*
